{
  "openapi": "3.0.0",
  "info": {
    "title": "API Documentation",
    "version": "1.0.0"
  },
  "component": {
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "security": [
    {
      "BearerAuth": []
    }
  ],
  "paths": {
    "/users": {
      "get": {
        "summary": "Get all users",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "A list of users"
          }
        }
      },
      "post": {
        "summary": "Create a new user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreateSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User created successfully"
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "summary": "Get a user by ID",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User found"
          }
        }
      },
      "patch": {
        "summary": "Update a user by ID",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdateSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User updated successfully"
          }
        }
      },
      "delete": {
        "summary": "Delete a user by ID",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted successfully"
          }
        }
      }
    },
    "/login": {
      "post": {
        "summary": "Create a login",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateLoginSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login created successfully"
          }
        }
      }
    },
    "/contacts": {
      "post": {
        "summary": "Create a new contact",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactCreateSchema"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Contact created successfully"
          }
        }
      },
      "get": {
        "summary": "Get all contacts",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "A list of contacts"
          }
        }
      }
    },
    "/contacts/{id}": {
      "get": {
        "summary": "Get a contact by ID",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Contact found"
          }
        }
      },
      "patch": {
        "summary": "Update a contact by ID",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactUpdateSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Contact updated successfully"
          }
        }
      },
      "delete": {
        "summary": "Delete a contact by ID",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Contact deleted successfully"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "UserCreateSchema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 3,
            "maxLength": 45
          },
          "email": {
            "type": "string",
            "format": "email",
            "minLength": 3,
            "maxLength": 45
          },
          "phone": {
            "type": "string",
            "minLength": 8
          },
          "password": {
            "type": "string",
            "minLength": 4,
            "maxLength": 120
          }
        }
      },
      "UserUpdateSchema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 3,
            "maxLength": 45
          },
          "email": {
            "type": "string",
            "format": "email",
            "minLength": 3,
            "maxLength": 45
          },
          "phone": {
            "type": "string",
            "minLength": 8
          },
          "password": {
            "type": "string",
            "minLength": 4,
            "maxLength": 120
          }
        }
      },
      "CreateLoginSchema": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "minLength": 10,
            "maxLength": 45
          },
          "password": {
            "type": "string",
            "minLength": 4,
            "maxLength": 120
          }
        }
      },
      "ContactCreateSchema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 3,
            "maxLength": 45
          },
          "email": {
            "type": "string",
            "format": "email",
            "minLength": 3,
            "maxLength": 45
          },
          "phone": {
            "type": "string",
            "minLength": 8
          }
        }
      },
      "ContactUpdateSchema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 3,
            "maxLength": 45
          },
          "email": {
            "type": "string",
            "format": "email",
            "minLength": 3,
            "maxLength": 45
          },
          "phone": {
            "type": "string",
            "minLength": 8
          }
        }
      }
    }
  }
}
